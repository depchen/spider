# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: http://doc.scrapy.org/en/latest/topics/item-pipeline.7html
import codecs
import json
import MySQLdb
from scrapy.pipelines.images import ImagesPipeline
from scrapy.exporters import JsonItemExporter

class ArticlespiderPipeline(object):
    def process_item(self, item, spider):
        return item

class ArticleImagePipeline(ImagesPipeline):
    def item_completed(self, results, item, info):
        for ok,value in results:
            image_file_path=value["path"]
        item["front_path_url"]=image_file_path
        return item
        pass
#自定义json文件的导出
class JsonWithEncodingPipeline(object):
    # 调用自定义json 导出json文件
    def __init__(self):
        self.file=codecs.open("article.json","w",encoding="utf-8")
    def process_item(self,item,spider):
        lines=json.dumps(dict(item),ensure_ascii=False)+"\n"
        self.file.write(lines)
        return item
    def spider_closed(self,spider):
        self.file.close()

class JsonExporterPipleline(object):
    #调用scrapy提供json export导出json文件
    def __init__(self):
        self.file=open("articleexport.json",'wb')
        self.exporter=JsonItemExporter(self.file,encoding="utf-8",ensure_ascii=False)
        self.exporter.start_exporting()

    def close_spider(self,spider):
        self.exporter.finish_exporting()
        self.file.close()

    def process_item(self,item,spider):
        self.exporter.export_item(item)
        return item

class MysqlPipeline(object):
    def __init__(self):
        self.conn=MySQLdb.connect("127.0.0.1","root","depchen","article_spider",charset="utf8",use_unicode=True)
        self.cursor=self.conn.cursor()

    def process_item(self,item,spider):
        insert_sql="""
            insert into article(url_object_id,title,url,create_time,fav_nums)
            VALUES (%s,%s,%s,%s,%s)
        """
        self.cursor.execute(insert_sql,(item["url_object_id"],item["title"],item["url"],item["create_time"],item["fav_num"]))
